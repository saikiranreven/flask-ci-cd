steps:
  - name: 'python:3.10'
    id: Install dependencies & Test
    entrypoint: /bin/sh
    args:
      - '-c'
      - |
        pip install -r app/requirements.txt
        pytest app/

  - name: 'python:3.10'
    id: Run linter
    entrypoint: sh
    args: ['-c', 'pip install flake8 && flake8 app/']

  - name: 'gcr.io/cloud-builders/docker'
    id: Build Docker image
    args: ['build', '-t', 'us-central1-docker.pkg.dev/project-bct-463501/flask-repo/flask-app:$SHORT_SHA', './app']

  - name: 'gcr.io/cloud-builders/docker'
    id: Push Docker image
    args: ['push', 'us-central1-docker.pkg.dev/project-bct-463501/flask-repo/flask-app:$SHORT_SHA']

  - name: 'hashicorp/terraform:1.6.0'
    id: Terraform Apply
    entrypoint: /bin/sh
    args:
      - '-c'
      - |
        cd terraform
        terraform init
        terraform apply -auto-approve \
          -var="project_id=project-bct-463501" \
          -var="region=us-central1" \
          -var="image_url=us-central1-docker.pkg.dev/project-bct-463501/flask-repo/flask-app:$SHORT_SHA"

  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: Cloud Run Deploy
    entrypoint: gcloud
    args:
      [
        'run', 'deploy', 'flask-app',
        '--image', 'us-central1-docker.pkg.dev/project-bct-463501/flask-repo/flask-app:$SHORT_SHA',
        '--region', 'us-central1',
        '--platform', 'managed',
        '--allow-unauthenticated'
      ]

  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: Trigger Cloud Deploy Release
    entrypoint: gcloud
    args:
    [
      'deploy', 'releases', 'create', 'release-$SHORT_SHA',
      '--project=project-bct-463501',
      '--region=us-central1',
      '--delivery-pipeline=flask-app-pipeline',
      '--images=flask-app=us-central1-docker.pkg.dev/project-bct-463501/flask-repo/flask-app:$SHORT_SHA',
      '--description=Automated release from Cloud Build'
    ]



images:
  - 'us-central1-docker.pkg.dev/project-bct-463501/flask-repo/flask-app:$SHORT_SHA'

options:
  logging: CLOUD_LOGGING_ONLY